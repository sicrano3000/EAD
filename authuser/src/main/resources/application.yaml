server:
  port: 8087
  servlet:
    context-path: '/ead-authuser/'

spring:
  application:
    name: ead-authuser-service
  config:
    import: 'optional:configserver:'
  cloud:
    config:
      discovery:
        service-id: ead-config-server
  datasource:
    url: jdbc:postgresql://localhost:5430/ead-authuser
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernat.dialect.PostgreSQLDialect
      jdbc:
        lob:
          non_contextual_creation: true
    properties:
      hibernate:
        show_sql: true
  output:
    ansi:
      enabled: ALWAYS
  rabbitmq:
    addresses: amqps://qxcsjgln:ks7OsmDW0TAI8kc119RuAclF6U-c_dtO@toad.rmq.cloudamqp.com/qxcsjgln

logging:
  level:
    com.ead: TRACE
    root: INFO

ead:
  serviceRegistry:
    username: serviceregistry
    password: 'ead123sr'
  api:
    url:
      course: 'http://ead-course-service/ead-course'
  broker:
    exchange:
      userEvent: ead.userevent

eureka:
  client:
    service-url:
      defaultZone: 'http://${ead.serviceRegistry.username}:${ead.serviceRegistry.password}@localhost:8761/eureka'
  instance:
    hostname: localhost

resilience4j:
  circuitbreaker:
    instances:
      circuitbreakerInstance:
        sliding-window-size: 30
        permitted-number-of-calls-in-half-open-state: 2
        sliding-window-type: TIME_BASED
        minimum-number-of-calls: 2
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 80
  retry:
    instances:
      retryInstance:
        maxAttempts: 3
        waitDuration: 5s